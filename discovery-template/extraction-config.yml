ios:
  device-vendor: 'Cisco IOS Software'
  records:
    - record: _ModuleNames
      source:
        command:
          line: show idprom interface
      filters:
        - textfsm:
            fsm: |-
              Value NAME (\S.*)

              Start
                ^${NAME}.*
    - record: _ModuleNames
      source:
        command:
          line: show inventory
      filters:
        - textfsm:
            fsm: |-
              Value NAME (\S.*)

              Start
                ^NAME\:\s+${NAME},\s+DESCR\:\s+ -> Next.Record
    - record: ModuleNames
      source:
        jinja:
          expression: |-
            {%- for name in _ModuleNames -%}
              {%- if loop.index > 1 -%}
                {{name[0] | replace('"','')}};
              {%- endif -%}
            {%- endfor -%}

    - record: _ModulePartNos
      source:
        command:
          line: show inventory
      filters:
        - textfsm:
            fsm: |-
              Value PID (\S.*)

              Start
                ^PID\:\s+${PID}[\s]+,\s+VID -> Next.Record
    - record: ModulePartNos
      source:
        jinja:
          expression: |-
            {%- for name in _ModulePartNos -%}
              {%- if loop.index > 1 -%}
                {{name[0] | replace('"','')}};
              {%- endif -%}
            {%- endfor -%}

    - record: ModulePartNo
      source:
        jinja:
          expression: |-
            {{ _ModulePartNos[0][0] }}

    - record: _IdpromSerials
      source:
        command:
          regmatch: show idprom interface
      filters:
        - textfsm:
            fsm: |-
              Value SERIAL (\S+)

              Start
                ^Vendor\s+Serial\s+Number\s+\:\s+${SERIAL}\s+ -> Next.Record
    - record: IdpromSerials
      source:
        jinja:
          expression: |-
            {% for inx in _IdpromSerials -%}
              {{_IdpromSerials[inx][0]}};
            {%- endfor %}

    - record: _IdpromSerials
      source:
        command:
          regmatch: show idprom interface
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value SERIAL (\S+)

              Start
                ^Vendor\s+Serial\s+Number\s+\:\s+${SERIAL}\s+ -> Next.Record
    - record: IdpromModels
      source:
        jinja:
          expression: |-
            {% for inx in _IdpromModels -%}
              {{_IdpromModels[inx][0]}};
            {%- endfor %}

    - record: _IdpromModels
      source:
        command:
          regmatch: show idprom interface
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value MODEL (\S+)

              Start
                ^Vendor\s+Part\s+Number\s+\:\s+${MODEL}\s+ -> Next.Record
    - record: _ModuleSerials
      source:
        command:
          line: show inventory
      filters:
        - textfsm:
            fsm: |-
              Value SN (\S.*)

              Start
                ^PID\:\s+(\S.*)\s+,\s+VID\:\s+(\S.*)\s+,\s+SN\:\s+${SN}.* -> Next.Record
    - record: ModuleSerials
      source:
        jinja:
          expression: |-
            {%- for name in _ModuleSerials -%}
              {%- if loop.index > 1 -%}
                {{name[0] | replace('"','')}};
              {%- endif -%}
            {%- endfor -%}

    - record: ModuleSerial
      source:
        jinja:
          expression: |-
            {{ _ModuleSerials[0][0] }}

    - record: _ModuleDescriptions
      source:
        command:
          line: show inventory
      filters:
        - textfsm:
            fsm: |-
              Value DESC (\S.*)

              Start
                ^NAME\:\s+(\S.*),\s+DESCR\:\s+${DESC} -> Next.Record
    - record: ModuleDescriptions
      source:
        jinja:
          expression: |-
            {%- for name in _ModuleDescriptions -%}
              {%- if loop.index > 1 -%}
                {{name[0] | replace('"','')}};
              {%- endif -%}
            {%- endfor -%}

    - record: ModuleDescription
      source:
        jinja:
          expression: |-
            {{ _ModuleDescriptions[0][0] }}

    - record: _ModuleNames
      source:
        command:
          line: show inventory
      filters:
        - textfsm:
            fsm: |-
              Value NAME (\S.*)

              Start
                ^NAME\:\s+${NAME},\s+DESCR\:\s+ -> Next.Record
    - record: ModuleNames
      source:
        jinja:
          expression: |-
            {%- for name in _ModuleNames -%}
              {%- if loop.index > 1 -%}
                {{name[0] | replace('"','')}};
              {%- endif -%}
            {%- endfor -%}

    - record: ModuleName
      source:
        jinja:
          expression: |-
            {{ _ModuleNames[0][0] }}

    - record: HostName
      source:
        command:
          line: show version
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value HOSTNAME (\S+)

              Start
                ^\s*${HOSTNAME}\s+uptime\s+is\s+\w+
    - record: _Uptime
      source:
        command:
          line: show version
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value UPTIME (.+)

              Start
                ^.*\s+uptime\s+is\s+${UPTIME}
    - record: Uptime
      source:
        jinja:
          expression: |-
            {{ get_uptime_days(_Uptime[0]) }}

    - record: SerialNumber
      source:
        command:
          line: show version
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value SERIAL (\S+)

              Start
                ^[Pp]rocessor\s+board\s+ID\s+${SERIAL}
    # DO NOT REMOVE USED BY PDF GENERATOR
    - record: DeviceModel
      source:
        command:
          line: show version
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value VERSION (\S+)
              Value HARDWARE (\S+)
              Value OS_VERSION (\S+)

              Start
                ^.*[Cc]isco\sIOS\sSoftware,\s${OS_VERSION}\sSoftware \(${HARDWARE}\),\sVersion\s${VERSION}.*
    - record: DeviceIP
      source:
        variables:
          command: '{{ get_device_ips(device_ip) }}'
          name: device_ip
          type: device
    - record: DeviceFQDN
      source:
        variables:
          name: fqdn
          type: device
    - record: RecordDate
      source:
        variables:
          command: '{{ datestamp() }}'
          name: timestamp
          type: device
    - record: DeviceLocation
      source:
        command:
          line: show running-config
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value LOCATION (\S+.*)

              Start
                ^snmp-server\slocation\s${LOCATION}
    - record: DeviceDescription
      source:
        command:
          line: show inventory
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value DESCRIPTION (\S+.*)

              Start
                ^.*\,\sDESCR:\s+${DESCRIPTION}
    - record: UptimeStoredDate
      source:
        command:
          line: show running-config
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value CONFIG_CHANGE_DATE (\S+.*)
              Value USER (\S+.*)

              Start
                ^\!\sLast\sconfiguration\schange\sat\s${CONFIG_CHANGE_DATE}\sby\s${USER}
    - record: CutomerName
      source:
        command:
          line: show running-config
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value CONFIG_CHANGE_DATE (\S+.*)
              Value USER (\S+.*)

              Start
                ^\!\sLast\sconfiguration\schange\sat\s${CONFIG_CHANGE_DATE}\sby\s${USER}

asa:
  device-vendor: 'Cisco ASA Software'
  records:
    - record: DeviceIP
      source:
        variables:
          command: '{{ get_device_ips(device_ip) }}'
          name: device_ip
          type: device
    - record: DeviceFQDN
      source:
        variables:
          name: fqdn
          type: device
    - record: RecordDate
      source:
        variables:
          command: '{{ datestamp() }}'
          name: timestamp
          type: device

ios_xr:
  device-vendor: 'Cisco IOS_XR Software'
  records:
    - record: DeviceIP
      source:
        variables:
          command: '{{ get_device_ips(device_ip) }}'
          name: device_ip
          type: device
    - record: DeviceFQDN
      source:
        variables:
          name: fqdn
          type: device
    - record: RecordDate
      source:
        variables:
          command: '{{ datestamp() }}'
          name: timestamp
          type: device

nxos:
  device-vendor: 'Cisco NXOS Software'
  records:
    - record: DeviceIP
      source:
        variables:
          command: '{{ get_device_ips(device_ip) }}'
          name: device_ip
          type: device
    - record: DeviceFQDN
      source:
        variables:
          name: fqdn
          type: device
    - record: RecordDate
      source:
        variables:
          command: '{{ datestamp() }}'
          name: timestamp
          type: device

junos:
  # "show version": "show version \r\nHostname: rojwnewr01j24\r\nModel: srx240h2-poe\r\nJUNOS Software Release [11.4R5.5]",
  device-vendor: 'Juniper JUNOS'
  records:
    - record: HostName
      source:
        command:
          line: show config
      filters:
        - textfsm:
            flatten: true
            fsm: |-
              Value HOSTNAME (\S+)

              Start
                ^\s*host\-name\s+${HOSTNAME};

    - record: DeviceIP
      source:
        variables:
          command: '{{ get_device_ips(device_ip) }}'
          name: device_ip
          type: device
    - record: DeviceFQDN
      source:
        variables:
          name: fqdn
          type: device
    - record: RecordDate
      source:
        variables:
          command: '{{ datestamp() }}'
          name: timestamp
          type: device

